@page "/reportinput/{assignmentId:int}"
@inject AssignmentService AssignmentService
@inject UserService UserService
@inject NavigationManager NavigationManager

@if (ReportAssignment is not null)
{
    <ReportRequestInfo ReportRequest="@request"/>

    @if (request is ReportRequestSurvey)
    {
        <ReportSurveyInput SubmitChanges="@SubmitChanges" ReportAssignment="@ReportAssignment"/>
    }

    @if (request is ReportRequestText)
    {
        <ReportTextInput SubmitChanges="@SubmitChanges" ReportAssignment="@ReportAssignment"/>
    }

    @if (request is ReportRequestWithFile)
    {
        <ReportWithFileInput SubmitChanges="@SubmitChanges" ReportAssignment="@ReportAssignment"/>
    }
}
else
{
    <h3>Назначение не найдено либо нет доступа к нему</h3>
}




@code {
    [Parameter]
    public int assignmentId { get; set; }

    public ReportAssignment ReportAssignment { get; set; }

    private ReportRequestBase request { get; set; }

    private ReportUser currentUser;

    protected override void OnInitialized()
    {
        var currentUser = UserService.GetCurrentUserModel();
        ReportAssignment = AssignmentService.GetById(currentUser, assignmentId);
        if (ReportAssignment is not null)
        {
            request = ReportAssignment.ReportAssignmentGroup.GetReportRequest();
        }
    }

    private void SubmitChanges(ReportBase report)
    {
        report.ReportUser = ReportAssignment.ReportUser;
        report.ReportAssignment = ReportAssignment;

        if (report is ReportSurvey) ReportAssignment.ReportSurvey = (ReportSurvey)report;
        if (report is ReportText) ReportAssignment.ReportText = (ReportText)report;
        if (report is ReportWithFile) ReportAssignment.ReportWithFile = (ReportWithFile)report;

        ReportAssignment.IsCompleted = true;

        AssignmentService.SaveReportInAssignment(ReportAssignment);

        NavigationManager.NavigateTo("/usersreports");

    }

}
