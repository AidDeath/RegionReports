     <div style="max-height: 400px ">
         <RadzenCard>
            <RadzenListBox 
                Data=@Districts 
                TValue="IEnumerable<District>" 
                Multiple=false 
                AllowClear=false 
                TextProperty="DistrictName" 
                LoadData=@LoadData 
                AllowFiltering=true
                Value=@CurrentUser.RelatedDistrictId
                Change=@(args => OnChange(args))
                />
        </RadzenCard>
     </div>



@code {
    public List<District>? Districts;

    public List<District> SelectedDistricts { get; set; } = new();

    [Parameter]
    public ReportUser CurrentUser { get; set; }

    private void OnChange(object value)
    {
        // Change=@(args => OnChange(args) - добавить в событие изменения ListBox
        var district = (District)value;
        CurrentUser.RelatedDistrict = district;
        CurrentUser.RelatedDistrictId = district.Id;

    }

    private void LoadData(LoadDataArgs args)
    {
        var query = db.Districts.GetAll();

        if (!string.IsNullOrEmpty(args.Filter))
        {
            //Убираю занятые районы из списка, кроме своих
            query = query.Where(district => district.ReportUserId == null || district.ReportUserId == CurrentUser.Id);
            //Применяю фильтр
            query = query.Where(d => d.DistrictName.ToLower().Contains(args.Filter.ToLower()));
        }

        Districts = query.ToList();

    }
}
