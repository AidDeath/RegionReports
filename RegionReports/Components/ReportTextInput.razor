<RadzenPanel AllowCollapse=false>
        <HeaderTemplate>
        <h4 class="m-0 d-flex align-items-center">
            <RadzenIcon Icon="description" Class="mr-1" /><b>Введите ответ в редактор ниже</b>
        </h4>
    </HeaderTemplate>
    <ChildContent>
        <RadzenHtmlEditor @bind-Value="@reportText.RepsonseString" style="height: 300px; margin-bottom: 1rem;">
                <RadzenHtmlEditorUndo Title="Отменить"/>
                <RadzenHtmlEditorRedo Title="Повторить"/>
                <RadzenHtmlEditorFontName Title="Шрифт"/> 
                <RadzenHtmlEditorFontSize Title="Размер шрифта"/>
                <RadzenHtmlEditorSeparator/>
                <RadzenHtmlEditorAlignLeft Title="По левому краю"/>
                <RadzenHtmlEditorAlignCenter Title="По центру"/>
                <RadzenHtmlEditorAlignRight Title="По правому краю"/>
                <RadzenHtmlEditorSeparator/>
                <RadzenHtmlEditorBold Title="Жирный"/>
                <RadzenHtmlEditorItalic Title="Курсив"/>
                <RadzenHtmlEditorUnderline Title="Подчеркнутый"/>
                <RadzenHtmlEditorStrikeThrough Title="Зачеркнутый"/>
                <RadzenHtmlEditorSeparator />
                <RadzenHtmlEditorColor Title="Цвет шрифта"/>
                <RadzenHtmlEditorBackground Title="Заливка"/>
                <RadzenHtmlEditorRemoveFormat Title="Очистить форматирование" />
        </RadzenHtmlEditor>

    </ChildContent>
</RadzenPanel>


<RadzenButton Text="Отправить ответ" Click="@(() => Submit())" Disabled="@isTextNotFilled"/>

@code {

    [Parameter]
    public ReportAssignment ReportAssignment { get; set; }

    private ReportText reportText = new();

    private bool isTextNotFilled => string.IsNullOrEmpty(reportText.RepsonseString);

    [Parameter]
    public EventCallback<ReportBase> SubmitChanges { get; set; }

    private void Submit()
    {
        SubmitChanges.InvokeAsync(reportText);
    }

}
